# ==> Init ICV begin
# * New ICV is 00 00 00 00 00 00 00 00 
# ==> Init ICV end
# ==> Init ICV begin
# * New ICV is 00 00 00 00 00 00 00 00 
# ==> Init ICV end
# working in replay-and-check mode (38 exchanges loaded)
# Command APDU (0): 00 A4 04 00 08 A0 00 00 00 03 00 00 00 
# testCommand 00 A4 04 00 08 A0 00 00 00 03 00 00 00 
# Filecommand 00 A4 04 00 08 A0 00 00 00 03 00 00 00 
# Response APDU (0): 6F 65 84 08 A0 00 00 00 03 00 00 00 A5 59 9F 65 01 FF 9F 6E 06 40 51 63 45 29 00 73 4A 06 07 2A 86 48 86 FC 6B 01 60 0C 06 0A 2A 86 48 86 FC 6B 02 02 01 01 63 09 06 07 2A 86 48 86 FC 6B 03 64 0B 06 09 2A 86 48 86 FC 6B 04 02 15 65 0B 06 09 2B 85 10 86 48 64 02 01 03 66 0C 06 0A 2B 06 01 04 01 2A 02 6E 01 02 90 00 
# SELECT Command (-> 00 A4 04 00 08 A0 00 00 00 03 00 00 00 ) (<- 6F 65 84 08 A0 00 00 00 03 00 00 00 A5 59 9F 65 01 FF 9F 6E 06 40 51 63 45 29 00 73 4A 06 07 2A 86 48 86 FC 6B 01 60 0C 06 0A 2A 86 48 86 FC 6B 02 02 01 01 63 09 06 07 2A 86 48 86 FC 6B 03 64 0B 06 09 2A 86 48 86 FC 6B 04 02 15 65 0B 06 09 2B 85 10 86 48 64 02 01 03 66 0C 06 0A 2B 06 01 04 01 2A 02 6E 01 02 90 00 )
00 A4 04 00 08 A0 00 00 00 03 00 00 00
6F 65 84 08 A0 00 00 00 03 00 00 00 A5 59 9F 65 01 FF 9F 6E 06 40 51 63 45 29 00 73 4A 06 07 2A 86 48 86 FC 6B 01 60 0C 06 0A 2A 86 48 86 FC 6B 02 02 01 01 63 09 06 07 2A 86 48 86 FC 6B 03 64 0B 06 09 2A 86 48 86 FC 6B 04 02 15 65 0B 06 09 2B 85 10 86 48 64 02 01 03 66 0C 06 0A 2B 06 01 04 01 2A 02 6E 01 02 90 00
# => Initialize Update
# ==> Init ICV begin
# * New ICV is 00 00 00 00 00 00 00 00 
# ==> Init ICV end
# Using a not random sequence: 87 B4 F1 07 62 54 3F C0 
# Command APDU (1): 80 50 00 00 08 87 B4 F1 07 62 54 3F C0 
# testCommand 80 50 00 00 08 87 B4 F1 07 62 54 3F C0 
# Filecommand 80 50 00 00 08 87 B4 F1 07 62 54 3F C0 
# Response APDU (1): 00 00 81 58 06 54 71 91 38 23 FF 03 00 00 9B 5C 03 BA A1 9D A6 49 B0 5F 65 6E D1 03 32 90 00 
# INIT UPDATE command (-> 80 50 00 00 08 87 B4 F1 07 62 54 3F C0 ) (<- 00 00 81 58 06 54 71 91 38 23 FF 03 00 00 9B 5C 03 BA A1 9D A6 49 B0 5F 65 6E D1 03 32 90 00 )
80 50 00 00 08 87 B4 F1 07 62 54 3F C0
00 00 81 58 06 54 71 91 38 23 FF 03 00 00 9B 5C 03 BA A1 9D A6 49 B0 5F 65 6E D1 03 32 90 00
# * Key Diversification Data is 00 00 81 58 06 54 71 91 38 23 
# * Host Challenge is 87 B4 F1 07 62 54 3F C0 
# * Card Challenge is 00 9B 5C 03 BA A1 9D A6 
# * Card Crypto Resp is 49 B0 5F 65 6E D1 03 32 
# ==> Init ICV begin
# * New ICV is 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
# ==> Init ICV end
# ==> Calculate Derivation Data
# * Derivation Data is 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 87 B4 F1 07 62 54 3F C0 00 9B 5C 03 BA A1 9D A6 
# ==> Calculate Derivation Data End
# ==> Generate Session Keys
# * staticKenc: 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 
# * staticKmac: 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 
# * staticKkek: 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 
# * SCP_Mode is SCP_03
# derivation data : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 87 B4 F1 07 62 54 3F C0 00 9B 5C 03 BA A1 9D A6 
# *** Initialize IV : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
# key : 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 
# sessEnc = B6 6A C2 95 F9 5E 2D B9 CE 57 87 7C C8 0C DF 30 
# sessMac = F0 63 23 6F E4 E3 6D 83 DC B5 CA DF 07 95 AA AE 
# sessRMac = FE 4F FD 5F 68 B3 FB 10 D8 B9 BB 84 C7 27 C4 DF 
# ==> Generate Session Keys Data End
# ==> Calculate Cryptograms
# * IV is 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
# * SCP 03 protocol used
# * derivation data : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 01 87 B4 F1 07 62 54 3F C0 00 9B 5C 03 BA A1 9D A6 
# Calculated Card Cryptogram = 49 B0 5F 65 6E D1 03 32 
# * derivation data : 00 00 00 00 00 00 00 00 00 00 00 01 00 00 40 01 87 B4 F1 07 62 54 3F C0 00 9B 5C 03 BA A1 9D A6 
# Calculated Host Cryptogram = 6D BE E6 D2 0F B4 89 84 
# ==> Calculate Cryptograms End
# Session State is now SESSION_INIT
# => Initialize Update end
# => External Authenticate begin
# * Sec Mode isNO_SECURITY_LEVEL
# * Data uses to calculate mac value is84 82 00 00 10 6D BE E6 D2 0F B4 89 84 
# ==> Generate Mac
# generateMac with data: 84 82 00 00 10 6D BE E6 D2 0F B4 89 84 
# - Data needs PADDING!
# * data with PADDING: 84 82 00 00 10 6D BE E6 D2 0F B4 89 84 80 00 00 
# SCP: SCP_03
# - Data needs PADDING!
# * data with PADDING: 84 82 00 00 10 6D BE E6 D2 0F B4 89 84 80 00 00 
# data used to gÃ©nerate mac : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 84 82 00 00 10 6D BE E6 D2 0F B4 89 84 80 00 00 
# * SCP 03 Protocol (SCP_03) used
# * IV is 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
# encrypted command : AC 5B 10 61 81 CF 03 6B E1 21 2E 2B 92 FC E4 80 49 DE A0 A8 E0 35 78 07 B6 34 42 3E AF 4A 24 11 
# ==> Generate Mac End
# * mac value obtainsAC 5B 10 61 81 CF 03 6B 
# Command APDU (2): 84 82 00 00 10 6D BE E6 D2 0F B4 89 84 AC 5B 10 61 81 CF 03 6B 
# testCommand 84 82 00 00 10 6D BE E6 D2 0F B4 89 84 AC 5B 10 61 81 CF 03 6B 
# Filecommand 84 82 00 00 10 6D BE E6 D2 0F B4 89 84 AC 5B 10 61 81 CF 03 6B 
# Response APDU (2): 90 00 
# EXTERNAL AUTHENTICATE command (-> 84 82 00 00 10 6D BE E6 D2 0F B4 89 84 AC 5B 10 61 81 CF 03 6B ) (<- 90 00 )
84 82 00 00 10 6D BE E6 D2 0F B4 89 84 AC 5B 10 61 81 CF 03 6B
90 00
# => External Authenticate end
# => Install for load begin
# + Package AID to install is A0 00 00 00 62 03 01 0C 01 
# + Security Domain AID is A0 00 00 00 03 00 00 00 
# + There is not parameter
# + SecLevel is NO_SECURITY_LEVEL
# * Parameters Length is 0 (0x0)
# * Parameters Length Encoded is 00 
# * Install For Load Command is 80 E6 02 00 16 09 A0 00 00 00 62 03 01 0C 01 08 A0 00 00 00 03 00 00 00 00 00 00 
# Command APDU (3): 80 E6 02 00 16 09 A0 00 00 00 62 03 01 0C 01 08 A0 00 00 00 03 00 00 00 00 00 00 
# testCommand 80 E6 02 00 16 09 A0 00 00 00 62 03 01 0C 01 08 A0 00 00 00 03 00 00 00 00 00 00 
# Filecommand 80 E6 02 00 16 09 A0 00 00 00 62 03 01 0C 01 08 A0 00 00 00 03 00 00 00 00 00 00 
# Response APDU (3): 00 90 00 
# INSTALL FOR LOAD command (-> 80 E6 02 00 16 09 A0 00 00 00 62 03 01 0C 01 08 A0 00 00 00 03 00 00 00 00 00 00 ) (<- 00 90 00 )
80 E6 02 00 16 09 A0 00 00 00 62 03 01 0C 01 08 A0 00 00 00 03 00 00 00 00 00 00
00 90 00
# => Install For Load Command End
# => Load Command Begin
# + Cap File size to load is 409
# + Max Data Length is 16(0x10)
# + SecLevel is NO_SECURITY_LEVEL
# * Cap File Remain Length is 409
# * ber is C4 82 01 99 
# * number of block is 26
# * Load Command is 80 E8 00 00 10 C4 82 01 99 01 00 13 DE CA FF ED 01 02 04 00 01 
# Command APDU (4): 80 E8 00 00 10 C4 82 01 99 01 00 13 DE CA FF ED 01 02 04 00 01 
# testCommand 80 E8 00 00 10 C4 82 01 99 01 00 13 DE CA FF ED 01 02 04 00 01 
# Filecommand 80 E8 00 00 10 C4 82 01 99 01 00 13 DE CA FF ED 01 02 04 00 01 
# Response APDU (4): 00 90 00 
# LOAD command (-> 80 E8 00 00 10 C4 82 01 99 01 00 13 DE CA FF ED 01 02 04 00 01 ) (<- 00 90 00 )
80 E8 00 00 10 C4 82 01 99 01 00 13 DE CA FF ED 01 02 04 00 01
00 90 00
# * Load Command is 80 E8 00 01 10 09 A0 00 00 00 62 03 01 0C 01 02 00 1F 00 13 00 
# Command APDU (5): 80 E8 00 01 10 09 A0 00 00 00 62 03 01 0C 01 02 00 1F 00 13 00 
# testCommand 80 E8 00 01 10 09 A0 00 00 00 62 03 01 0C 01 02 00 1F 00 13 00 
# Filecommand 80 E8 00 01 10 09 A0 00 00 00 62 03 01 0C 01 02 00 1F 00 13 00 
# Response APDU (5): 00 90 00 
# LOAD command (-> 80 E8 00 01 10 09 A0 00 00 00 62 03 01 0C 01 02 00 1F 00 13 00 ) (<- 00 90 00 )
80 E8 00 01 10 09 A0 00 00 00 62 03 01 0C 01 02 00 1F 00 13 00
00 90 00
# * Load Command is 80 E8 00 02 10 1F 00 0E 00 0B 00 36 00 0C 00 65 00 0A 00 13 00 
# Command APDU (6): 80 E8 00 02 10 1F 00 0E 00 0B 00 36 00 0C 00 65 00 0A 00 13 00 
# testCommand 80 E8 00 02 10 1F 00 0E 00 0B 00 36 00 0C 00 65 00 0A 00 13 00 
# Filecommand 80 E8 00 02 10 1F 00 0E 00 0B 00 36 00 0C 00 65 00 0A 00 13 00 
# Response APDU (6): 00 90 00 
# LOAD command (-> 80 E8 00 02 10 1F 00 0E 00 0B 00 36 00 0C 00 65 00 0A 00 13 00 ) (<- 00 90 00 )
80 E8 00 02 10 1F 00 0E 00 0B 00 36 00 0C 00 65 00 0A 00 13 00
00 90 00
# * Load Command is 80 E8 00 03 10 00 00 6C 00 00 00 00 00 00 01 01 00 04 00 0B 01 
# Command APDU (7): 80 E8 00 03 10 00 00 6C 00 00 00 00 00 00 01 01 00 04 00 0B 01 
# testCommand 80 E8 00 03 10 00 00 6C 00 00 00 00 00 00 01 01 00 04 00 0B 01 
# Filecommand 80 E8 00 03 10 00 00 6C 00 00 00 00 00 00 01 01 00 04 00 0B 01 
# Response APDU (7): 00 90 00 
# LOAD command (-> 80 E8 00 03 10 00 00 6C 00 00 00 00 00 00 01 01 00 04 00 0B 01 ) (<- 00 90 00 )
80 E8 00 03 10 00 00 6C 00 00 00 00 00 00 01 01 00 04 00 0B 01
00 90 00
# * Load Command is 80 E8 00 04 10 00 01 07 A0 00 00 00 62 01 01 03 00 0E 01 0A A0 
# Command APDU (8): 80 E8 00 04 10 00 01 07 A0 00 00 00 62 01 01 03 00 0E 01 0A A0 
# testCommand 80 E8 00 04 10 00 01 07 A0 00 00 00 62 01 01 03 00 0E 01 0A A0 
# Filecommand 80 E8 00 04 10 00 01 07 A0 00 00 00 62 01 01 03 00 0E 01 0A A0 
# Response APDU (8): 00 90 00 
# LOAD command (-> 80 E8 00 04 10 00 01 07 A0 00 00 00 62 01 01 03 00 0E 01 0A A0 ) (<- 00 90 00 )
80 E8 00 04 10 00 01 07 A0 00 00 00 62 01 01 03 00 0E 01 0A A0
00 90 00
# * Load Command is 80 E8 00 05 10 00 00 00 62 03 01 0C 01 01 00 14 06 00 0C 00 80 
# Command APDU (9): 80 E8 00 05 10 00 00 00 62 03 01 0C 01 01 00 14 06 00 0C 00 80 
# testCommand 80 E8 00 05 10 00 00 00 62 03 01 0C 01 01 00 14 06 00 0C 00 80 
# Filecommand 80 E8 00 05 10 00 00 00 62 03 01 0C 01 01 00 14 06 00 0C 00 80 
# Response APDU (9): 00 90 00 
# LOAD command (-> 80 E8 00 05 10 00 00 00 62 03 01 0C 01 01 00 14 06 00 0C 00 80 ) (<- 00 90 00 )
80 E8 00 05 10 00 00 00 62 03 01 0C 01 01 00 14 06 00 0C 00 80
00 90 00
# * Load Command is 80 E8 00 06 10 03 01 00 01 07 01 00 00 00 1D 07 00 65 00 02 10 
# Command APDU (10): 80 E8 00 06 10 03 01 00 01 07 01 00 00 00 1D 07 00 65 00 02 10 
# testCommand 80 E8 00 06 10 03 01 00 01 07 01 00 00 00 1D 07 00 65 00 02 10 
# Filecommand 80 E8 00 06 10 03 01 00 01 07 01 00 00 00 1D 07 00 65 00 02 10 
# Response APDU (10): 00 90 00 
# LOAD command (-> 80 E8 00 06 10 03 01 00 01 07 01 00 00 00 1D 07 00 65 00 02 10 ) (<- 00 90 00 )
80 E8 00 06 10 03 01 00 01 07 01 00 00 00 1D 07 00 65 00 02 10
00 90 00
# * Load Command is 80 E8 00 07 10 18 8C 00 01 18 11 01 00 90 0B 87 00 18 8B 00 02 
# Command APDU (11): 80 E8 00 07 10 18 8C 00 01 18 11 01 00 90 0B 87 00 18 8B 00 02 
# testCommand 80 E8 00 07 10 18 8C 00 01 18 11 01 00 90 0B 87 00 18 8B 00 02 
# Filecommand 80 E8 00 07 10 18 8C 00 01 18 11 01 00 90 0B 87 00 18 8B 00 02 
# Response APDU (11): 00 90 00 
# LOAD command (-> 80 E8 00 07 10 18 8C 00 01 18 11 01 00 90 0B 87 00 18 8B 00 02 ) (<- 00 90 00 )
80 E8 00 07 10 18 8C 00 01 18 11 01 00 90 0B 87 00 18 8B 00 02
00 90 00
# * Load Command is 80 E8 00 08 10 7A 01 30 8F 00 03 8C 00 04 7A 05 23 19 8B 00 05 
# Command APDU (12): 80 E8 00 08 10 7A 01 30 8F 00 03 8C 00 04 7A 05 23 19 8B 00 05 
# testCommand 80 E8 00 08 10 7A 01 30 8F 00 03 8C 00 04 7A 05 23 19 8B 00 05 
# Filecommand 80 E8 00 08 10 7A 01 30 8F 00 03 8C 00 04 7A 05 23 19 8B 00 05 
# Response APDU (12): 00 90 00 
# LOAD command (-> 80 E8 00 08 10 7A 01 30 8F 00 03 8C 00 04 7A 05 23 19 8B 00 05 ) (<- 00 90 00 )
80 E8 00 08 10 7A 01 30 8F 00 03 8C 00 04 7A 05 23 19 8B 00 05
00 90 00
# * Load Command is 80 E8 00 09 10 2D 19 8B 00 06 32 03 29 04 70 19 1A 08 AD 00 16 
# Command APDU (13): 80 E8 00 09 10 2D 19 8B 00 06 32 03 29 04 70 19 1A 08 AD 00 16 
# testCommand 80 E8 00 09 10 2D 19 8B 00 06 32 03 29 04 70 19 1A 08 AD 00 16 
# Filecommand 80 E8 00 09 10 2D 19 8B 00 06 32 03 29 04 70 19 1A 08 AD 00 16 
# Response APDU (13): 00 90 00 
# LOAD command (-> 80 E8 00 09 10 2D 19 8B 00 06 32 03 29 04 70 19 1A 08 AD 00 16 ) (<- 00 90 00 )
80 E8 00 09 10 2D 19 8B 00 06 32 03 29 04 70 19 1A 08 AD 00 16
00 90 00
# * Load Command is 80 E8 00 0A 10 04 1F 8D 00 0B 3B 16 04 1F 41 29 04 19 08 8B 00 
# Command APDU (14): 80 E8 00 0A 10 04 1F 8D 00 0B 3B 16 04 1F 41 29 04 19 08 8B 00 
# testCommand 80 E8 00 0A 10 04 1F 8D 00 0B 3B 16 04 1F 41 29 04 19 08 8B 00 
# Filecommand 80 E8 00 0A 10 04 1F 8D 00 0B 3B 16 04 1F 41 29 04 19 08 8B 00 
# Response APDU (14): 00 90 00 
# LOAD command (-> 80 E8 00 0A 10 04 1F 8D 00 0B 3B 16 04 1F 41 29 04 19 08 8B 00 ) (<- 00 90 00 )
80 E8 00 0A 10 04 1F 8D 00 0B 3B 16 04 1F 41 29 04 19 08 8B 00
00 90 00
# * Load Command is 80 E8 00 0B 10 0C 32 1F 64 E8 19 8B 00 07 3B 19 16 04 08 41 8B 
# Command APDU (15): 80 E8 00 0B 10 0C 32 1F 64 E8 19 8B 00 07 3B 19 16 04 08 41 8B 
# testCommand 80 E8 00 0B 10 0C 32 1F 64 E8 19 8B 00 07 3B 19 16 04 08 41 8B 
# Filecommand 80 E8 00 0B 10 0C 32 1F 64 E8 19 8B 00 07 3B 19 16 04 08 41 8B 
# Response APDU (15): 00 90 00 
# LOAD command (-> 80 E8 00 0B 10 0C 32 1F 64 E8 19 8B 00 07 3B 19 16 04 08 41 8B ) (<- 00 90 00 )
80 E8 00 0B 10 0C 32 1F 64 E8 19 8B 00 07 3B 19 16 04 08 41 8B
00 90 00
# * Load Command is 80 E8 00 0C 10 00 08 19 03 08 8B 00 09 19 AD 00 03 16 04 8B 00 
# Command APDU (16): 80 E8 00 0C 10 00 08 19 03 08 8B 00 09 19 AD 00 03 16 04 8B 00 
# testCommand 80 E8 00 0C 10 00 08 19 03 08 8B 00 09 19 AD 00 03 16 04 8B 00 
# Filecommand 80 E8 00 0C 10 00 08 19 03 08 8B 00 09 19 AD 00 03 16 04 8B 00 
# Response APDU (16): 00 90 00 
# LOAD command (-> 80 E8 00 0C 10 00 08 19 03 08 8B 00 09 19 AD 00 03 16 04 8B 00 ) (<- 00 90 00 )
80 E8 00 0C 10 00 08 19 03 08 8B 00 09 19 AD 00 03 16 04 8B 00
00 90 00
# * Load Command is 80 E8 00 0D 10 0A 7A 08 00 0A 00 00 00 00 00 00 00 00 00 00 05 
# Command APDU (17): 80 E8 00 0D 10 0A 7A 08 00 0A 00 00 00 00 00 00 00 00 00 00 05 
# testCommand 80 E8 00 0D 10 0A 7A 08 00 0A 00 00 00 00 00 00 00 00 00 00 05 
# Filecommand 80 E8 00 0D 10 0A 7A 08 00 0A 00 00 00 00 00 00 00 00 00 00 05 
# Response APDU (17): 00 90 00 
# LOAD command (-> 80 E8 00 0D 10 0A 7A 08 00 0A 00 00 00 00 00 00 00 00 00 00 05 ) (<- 00 90 00 )
80 E8 00 0D 10 0A 7A 08 00 0A 00 00 00 00 00 00 00 00 00 00 05
00 90 00
# * Load Command is 80 E8 00 0E 10 00 36 00 0D 02 00 00 00 06 80 03 00 03 80 03 01 
# Command APDU (18): 80 E8 00 0E 10 00 36 00 0D 02 00 00 00 06 80 03 00 03 80 03 01 
# testCommand 80 E8 00 0E 10 00 36 00 0D 02 00 00 00 06 80 03 00 03 80 03 01 
# Filecommand 80 E8 00 0E 10 00 36 00 0D 02 00 00 00 06 80 03 00 03 80 03 01 
# Response APDU (18): 00 90 00 
# LOAD command (-> 80 E8 00 0E 10 00 36 00 0D 02 00 00 00 06 80 03 00 03 80 03 01 ) (<- 00 90 00 )
80 E8 00 0E 10 00 36 00 0D 02 00 00 00 06 80 03 00 03 80 03 01
00 90 00
# * Load Command is 80 E8 00 0F 10 01 00 00 00 06 00 00 01 03 80 0A 01 03 80 0A 06 
# Command APDU (19): 80 E8 00 0F 10 01 00 00 00 06 00 00 01 03 80 0A 01 03 80 0A 06 
# testCommand 80 E8 00 0F 10 01 00 00 00 06 00 00 01 03 80 0A 01 03 80 0A 06 
# Filecommand 80 E8 00 0F 10 01 00 00 00 06 00 00 01 03 80 0A 01 03 80 0A 06 
# Response APDU (19): 00 90 00 
# LOAD command (-> 80 E8 00 0F 10 01 00 00 00 06 00 00 01 03 80 0A 01 03 80 0A 06 ) (<- 00 90 00 )
80 E8 00 0F 10 01 00 00 00 06 00 00 01 03 80 0A 01 03 80 0A 06
00 90 00
# * Load Command is 80 E8 00 10 10 03 80 0A 07 03 80 0A 09 03 80 0A 04 03 80 0A 05 
# Command APDU (20): 80 E8 00 10 10 03 80 0A 07 03 80 0A 09 03 80 0A 04 03 80 0A 05 
# testCommand 80 E8 00 10 10 03 80 0A 07 03 80 0A 09 03 80 0A 04 03 80 0A 05 
# Filecommand 80 E8 00 10 10 03 80 0A 07 03 80 0A 09 03 80 0A 04 03 80 0A 05 
# Response APDU (20): 00 90 00 
# LOAD command (-> 80 E8 00 10 10 03 80 0A 07 03 80 0A 09 03 80 0A 04 03 80 0A 05 ) (<- 00 90 00 )
80 E8 00 10 10 03 80 0A 07 03 80 0A 09 03 80 0A 04 03 80 0A 05
00 90 00
# * Load Command is 80 E8 00 11 10 06 80 10 02 03 80 0A 03 09 00 13 00 03 0E 23 2C 
# Command APDU (21): 80 E8 00 11 10 06 80 10 02 03 80 0A 03 09 00 13 00 03 0E 23 2C 
# testCommand 80 E8 00 11 10 06 80 10 02 03 80 0A 03 09 00 13 00 03 0E 23 2C 
# Filecommand 80 E8 00 11 10 06 80 10 02 03 80 0A 03 09 00 13 00 03 0E 23 2C 
# Response APDU (21): 00 90 00 
# LOAD command (-> 80 E8 00 11 10 06 80 10 02 03 80 0A 03 09 00 13 00 03 0E 23 2C ) (<- 00 90 00 )
80 E8 00 11 10 06 80 10 02 03 80 0A 03 09 00 13 00 03 0E 23 2C
00 90 00
# * Load Command is 80 E8 00 12 10 00 0C 05 0C 06 03 07 05 10 0C 08 09 06 09 0B 00 
# Command APDU (22): 80 E8 00 12 10 00 0C 05 0C 06 03 07 05 10 0C 08 09 06 09 0B 00 
# testCommand 80 E8 00 12 10 00 0C 05 0C 06 03 07 05 10 0C 08 09 06 09 0B 00 
# Filecommand 80 E8 00 12 10 00 0C 05 0C 06 03 07 05 10 0C 08 09 06 09 0B 00 
# Response APDU (22): 00 90 00 
# LOAD command (-> 80 E8 00 12 10 00 0C 05 0C 06 03 07 05 10 0C 08 09 06 09 0B 00 ) (<- 00 90 00 )
80 E8 00 12 10 00 0C 05 0C 06 03 07 05 10 0C 08 09 06 09 0B 00
00 90 00
# * Load Command is 80 E8 00 13 10 6C 01 00 01 00 00 00 00 01 00 03 00 02 00 00 00 
# Command APDU (23): 80 E8 00 13 10 6C 01 00 01 00 00 00 00 01 00 03 00 02 00 00 00 
# testCommand 80 E8 00 13 10 6C 01 00 01 00 00 00 00 01 00 03 00 02 00 00 00 
# Filecommand 80 E8 00 13 10 6C 01 00 01 00 00 00 00 01 00 03 00 02 00 00 00 
# Response APDU (23): 00 90 00 
# LOAD command (-> 80 E8 00 13 10 6C 01 00 01 00 00 00 00 01 00 03 00 02 00 00 00 ) (<- 00 90 00 )
80 E8 00 13 10 6C 01 00 01 00 00 00 00 01 00 03 00 02 00 00 00
00 90 00
# * Load Command is 80 E8 00 14 10 00 1C 00 84 00 01 00 1E 00 11 00 00 00 00 01 09 
# Command APDU (24): 80 E8 00 14 10 00 1C 00 84 00 01 00 1E 00 11 00 00 00 00 01 09 
# testCommand 80 E8 00 14 10 00 1C 00 84 00 01 00 1E 00 11 00 00 00 00 01 09 
# Filecommand 80 E8 00 14 10 00 1C 00 84 00 01 00 1E 00 11 00 00 00 00 01 09 
# Response APDU (24): 00 90 00 
# LOAD command (-> 80 E8 00 14 10 00 1C 00 84 00 01 00 1E 00 11 00 00 00 00 01 09 ) (<- 00 90 00 )
80 E8 00 14 10 00 1C 00 84 00 01 00 1E 00 11 00 00 00 00 01 09
00 90 00
# * Load Command is 80 E8 00 15 10 00 14 00 30 00 07 00 00 00 00 07 01 00 1D 00 33 
# Command APDU (25): 80 E8 00 15 10 00 14 00 30 00 07 00 00 00 00 07 01 00 1D 00 33 
# testCommand 80 E8 00 15 10 00 14 00 30 00 07 00 00 00 00 07 01 00 1D 00 33 
# Filecommand 80 E8 00 15 10 00 14 00 30 00 07 00 00 00 00 07 01 00 1D 00 33 
# Response APDU (25): 00 90 00 
# LOAD command (-> 80 E8 00 15 10 00 14 00 30 00 07 00 00 00 00 07 01 00 1D 00 33 ) (<- 00 90 00 )
80 E8 00 15 10 00 14 00 30 00 07 00 00 00 00 07 01 00 1D 00 33
00 90 00
# * Load Command is 80 E8 00 16 10 00 46 00 00 00 00 00 0D 00 1C 00 1E 00 1E FF FF 
# Command APDU (26): 80 E8 00 16 10 00 46 00 00 00 00 00 0D 00 1C 00 1E 00 1E FF FF 
# testCommand 80 E8 00 16 10 00 46 00 00 00 00 00 0D 00 1C 00 1E 00 1E FF FF 
# Filecommand 80 E8 00 16 10 00 46 00 00 00 00 00 0D 00 1C 00 1E 00 1E FF FF 
# Response APDU (26): 00 90 00 
# LOAD command (-> 80 E8 00 16 10 00 46 00 00 00 00 00 0D 00 1C 00 1E 00 1E FF FF ) (<- 00 90 00 )
80 E8 00 16 10 00 46 00 00 00 00 00 0D 00 1C 00 1E 00 1E FF FF
00 90 00
# * Load Command is 80 E8 00 17 10 00 1E 00 1C 00 20 00 20 00 22 00 24 00 27 00 2A 
# Command APDU (27): 80 E8 00 17 10 00 1E 00 1C 00 20 00 20 00 22 00 24 00 27 00 2A 
# testCommand 80 E8 00 17 10 00 1E 00 1C 00 20 00 20 00 22 00 24 00 27 00 2A 
# Filecommand 80 E8 00 17 10 00 1E 00 1C 00 20 00 20 00 22 00 24 00 27 00 2A 
# Response APDU (27): 00 90 00 
# LOAD command (-> 80 E8 00 17 10 00 1E 00 1C 00 20 00 20 00 22 00 24 00 27 00 2A ) (<- 00 90 00 )
80 E8 00 17 10 00 1E 00 1C 00 20 00 20 00 22 00 24 00 27 00 2A
00 90 00
# * Load Command is 80 E8 00 18 10 00 2E 01 B0 01 10 01 40 02 41 03 44 10 04 B4 41 
# Command APDU (28): 80 E8 00 18 10 00 2E 01 B0 01 10 01 40 02 41 03 44 10 04 B4 41 
# testCommand 80 E8 00 18 10 00 2E 01 B0 01 10 01 40 02 41 03 44 10 04 B4 41 
# Filecommand 80 E8 00 18 10 00 2E 01 B0 01 10 01 40 02 41 03 44 10 04 B4 41 
# Response APDU (28): 00 90 00 
# LOAD command (-> 80 E8 00 18 10 00 2E 01 B0 01 10 01 40 02 41 03 44 10 04 B4 41 ) (<- 00 90 00 )
80 E8 00 18 10 00 2E 01 B0 01 10 01 40 02 41 03 44 10 04 B4 41
00 90 00
# * Load Command is 80 E8 80 19 0D 06 B4 B4 44 02 44 04 B4 31 06 68 00 A1 
# Command APDU (29): 80 E8 80 19 0D 06 B4 B4 44 02 44 04 B4 31 06 68 00 A1 
# testCommand 80 E8 80 19 0D 06 B4 B4 44 02 44 04 B4 31 06 68 00 A1 
# Filecommand 80 E8 80 19 0D 06 B4 B4 44 02 44 04 B4 31 06 68 00 A1 
# Response APDU (29): 00 90 00 
# LOAD command (-> 80 E8 80 19 0D 06 B4 B4 44 02 44 04 B4 31 06 68 00 A1 ) (<- 00 90 00 )
80 E8 80 19 0D 06 B4 B4 44 02 44 04 B4 31 06 68 00 A1
00 90 00
# => Load Command End
# => Install For Install And Make Selectable Begin
# + Load File AID is A0 00 00 00 62 03 01 0C 01 
# + Module AID is A0 00 00 00 62 03 01 0C 01 01 
# + Application AID is A0 00 00 00 62 03 01 0C 01 01 
# + Privileges AID is 00 
# + There is not parameters
# * New parameters are C9 00 
# * Parameters Length is 2
# * Parameters Length Encoded is 02 
# * Install For Install Command is 80 E6 0C 00 26 09 A0 00 00 00 62 03 01 0C 01 0A A0 00 00 00 62 03 01 0C 01 01 0A A0 00 00 00 62 03 01 0C 01 01 01 00 02 C9 00 00 
# Command APDU (30): 80 E6 0C 00 26 09 A0 00 00 00 62 03 01 0C 01 0A A0 00 00 00 62 03 01 0C 01 01 0A A0 00 00 00 62 03 01 0C 01 01 01 00 02 C9 00 00 
# testCommand 80 E6 0C 00 26 09 A0 00 00 00 62 03 01 0C 01 0A A0 00 00 00 62 03 01 0C 01 01 0A A0 00 00 00 62 03 01 0C 01 01 01 00 02 C9 00 00 
# Filecommand 80 E6 0C 00 26 09 A0 00 00 00 62 03 01 0C 01 0A A0 00 00 00 62 03 01 0C 01 01 0A A0 00 00 00 62 03 01 0C 01 01 01 00 02 C9 00 00 
# Response APDU (30): 90 00 
# INSTALL FOR INSTALL AND MAKE SELECTABLE (-> 80 E6 0C 00 26 09 A0 00 00 00 62 03 01 0C 01 0A A0 00 00 00 62 03 01 0C 01 01 0A A0 00 00 00 62 03 01 0C 01 01 01 00 02 C9 00 00 ) (<- 90 00 )
80 E6 0C 00 26 09 A0 00 00 00 62 03 01 0C 01 0A A0 00 00 00 62 03 01 0C 01 01 0A A0 00 00 00 62 03 01 0C 01 01 01 00 02 C9 00 00
90 00
# => Install For Install And Make Selectable End
# Command APDU (31): 00 A4 04 00 0A A0 00 00 00 62 03 01 0C 01 01 
# testCommand 00 A4 04 00 0A A0 00 00 00 62 03 01 0C 01 01 
# Filecommand 00 A4 04 00 0A A0 00 00 00 62 03 01 0C 01 01 
# Response APDU (31): 00 A4 04 00 0A A0 00 00 00 62 03 01 0C 01 01 90 00 
# SELECT Command (-> 00 A4 04 00 0A A0 00 00 00 62 03 01 0C 01 01 ) (<- 00 A4 04 00 0A A0 00 00 00 62 03 01 0C 01 01 90 00 )
00 A4 04 00 0A A0 00 00 00 62 03 01 0C 01 01
00 A4 04 00 0A A0 00 00 00 62 03 01 0C 01 01 90 00
# Command APDU (32): 00 00 00 00 05 48 45 4C 4C 4F 
# testCommand 00 00 00 00 05 48 45 4C 4C 4F 
# Filecommand 00 00 00 00 05 48 45 4C 4C 4F
00 00 00 00 05 48 45 4C 4C 4F
00 00 00 05 48 45 4C 4C 4F 90 00
# Response APDU (32): 00 00 00 00 05 48 45 4C 4C 4F 90 00 
# Command APDU (33): 00 A4 04 00 08 A0 00 00 00 03 00 00 00 
# testCommand 00 A4 04 00 08 A0 00 00 00 03 00 00 00 
# Filecommand 00 A4 04 00 08 A0 00 00 00 03 00 00 00 
# Response APDU (33): 6F 65 84 08 A0 00 00 00 03 00 00 00 A5 59 9F 65 01 FF 9F 6E 06 40 51 63 45 29 00 73 4A 06 07 2A 86 48 86 FC 6B 01 60 0C 06 0A 2A 86 48 86 FC 6B 02 02 01 01 63 09 06 07 2A 86 48 86 FC 6B 03 64 0B 06 09 2A 86 48 86 FC 6B 04 02 15 65 0B 06 09 2B 85 10 86 48 64 02 01 03 66 0C 06 0A 2B 06 01 04 01 2A 02 6E 01 02 90 00 
# SELECT Command (-> 00 A4 04 00 08 A0 00 00 00 03 00 00 00 ) (<- 6F 65 84 08 A0 00 00 00 03 00 00 00 A5 59 9F 65 01 FF 9F 6E 06 40 51 63 45 29 00 73 4A 06 07 2A 86 48 86 FC 6B 01 60 0C 06 0A 2A 86 48 86 FC 6B 02 02 01 01 63 09 06 07 2A 86 48 86 FC 6B 03 64 0B 06 09 2A 86 48 86 FC 6B 04 02 15 65 0B 06 09 2B 85 10 86 48 64 02 01 03 66 0C 06 0A 2B 06 01 04 01 2A 02 6E 01 02 90 00 )
00 A4 04 00 08 A0 00 00 00 03 00 00 00
6F 65 84 08 A0 00 00 00 03 00 00 00 A5 59 9F 65 01 FF 9F 6E 06 40 51 63 45 29 00 73 4A 06 07 2A 86 48 86 FC 6B 01 60 0C 06 0A 2A 86 48 86 FC 6B 02 02 01 01 63 09 06 07 2A 86 48 86 FC 6B 03 64 0B 06 09 2A 86 48 86 FC 6B 04 02 15 65 0B 06 09 2B 85 10 86 48 64 02 01 03 66 0C 06 0A 2B 06 01 04 01 2A 02 6E 01 02 90 00
# => Initialize Update
# ==> Init ICV begin
# * New ICV is 00 00 00 00 00 00 00 00 
# ==> Init ICV end
# Using a not random sequence: 53 EE 47 03 D3 94 20 00 
# Command APDU (34): 80 50 00 00 08 53 EE 47 03 D3 94 20 00 
# testCommand 80 50 00 00 08 53 EE 47 03 D3 94 20 00 
# Filecommand 80 50 00 00 08 53 EE 47 03 D3 94 20 00 
# Response APDU (34): 00 00 81 58 06 54 71 91 38 23 FF 03 00 00 9C F6 5B 8D 45 91 33 FA EC 8A 46 8D DB FA D3 90 00 
# INIT UPDATE command (-> 80 50 00 00 08 53 EE 47 03 D3 94 20 00 ) (<- 00 00 81 58 06 54 71 91 38 23 FF 03 00 00 9C F6 5B 8D 45 91 33 FA EC 8A 46 8D DB FA D3 90 00 )
80 50 00 00 08 53 EE 47 03 D3 94 20 00
00 00 81 58 06 54 71 91 38 23 FF 03 00 00 9C F6 5B 8D 45 91 33 FA EC 8A 46 8D DB FA D3 90 00
# * Key Diversification Data is 00 00 81 58 06 54 71 91 38 23 
# * Host Challenge is 53 EE 47 03 D3 94 20 00 
# * Card Challenge is 00 9C F6 5B 8D 45 91 33 
# * Card Crypto Resp is FA EC 8A 46 8D DB FA D3 
# ==> Init ICV begin
# * New ICV is 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
# ==> Init ICV end
# ==> Calculate Derivation Data
# * Derivation Data is 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 53 EE 47 03 D3 94 20 00 00 9C F6 5B 8D 45 91 33 
# ==> Calculate Derivation Data End
# ==> Generate Session Keys
# * staticKenc: 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 
# * staticKmac: 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 
# * staticKkek: 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 
# * SCP_Mode is SCP_03
# derivation data : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 53 EE 47 03 D3 94 20 00 00 9C F6 5B 8D 45 91 33 
# *** Initialize IV : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
# key : 40 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 
# sessEnc = 38 4B 29 D8 91 DC 50 C0 84 9B 3D FC B8 D1 37 A7 
# sessMac = 41 0C C8 17 73 9A 0D 01 4F B6 E6 E7 BA D9 5E FF 
# sessRMac = E1 C3 98 0B FF C5 8E A0 A4 3D 60 4A 05 8C 99 75 
# ==> Generate Session Keys Data End
# ==> Calculate Cryptograms
# * IV is 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
# * SCP 03 protocol used
# * derivation data : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 40 01 53 EE 47 03 D3 94 20 00 00 9C F6 5B 8D 45 91 33 
# Calculated Card Cryptogram = FA EC 8A 46 8D DB FA D3 
# * derivation data : 00 00 00 00 00 00 00 00 00 00 00 01 00 00 40 01 53 EE 47 03 D3 94 20 00 00 9C F6 5B 8D 45 91 33 
# Calculated Host Cryptogram = 4C 7E AA 9B D8 98 09 B3 
# ==> Calculate Cryptograms End
# Session State is now SESSION_INIT
# => Initialize Update end
# => External Authenticate begin
# * Sec Mode isNO_SECURITY_LEVEL
# * Data uses to calculate mac value is84 82 00 00 10 4C 7E AA 9B D8 98 09 B3 
# ==> Generate Mac
# generateMac with data: 84 82 00 00 10 4C 7E AA 9B D8 98 09 B3 
# - Data needs PADDING!
# * data with PADDING: 84 82 00 00 10 4C 7E AA 9B D8 98 09 B3 80 00 00 
# SCP: SCP_03
# - Data needs PADDING!
# * data with PADDING: 84 82 00 00 10 4C 7E AA 9B D8 98 09 B3 80 00 00 
# data used to gÃ©nerate mac : 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 84 82 00 00 10 4C 7E AA 9B D8 98 09 B3 80 00 00 
# * SCP 03 Protocol (SCP_03) used
# * IV is 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
# encrypted command : C3 4F 95 91 35 C0 0A 36 60 08 BD 9E 44 93 68 F5 F6 65 6B C3 4E 6E 6A A2 80 2B 13 7D 8A 5C C9 5B 
# ==> Generate Mac End
# * mac value obtainsC3 4F 95 91 35 C0 0A 36 
# Command APDU (35): 84 82 00 00 10 4C 7E AA 9B D8 98 09 B3 C3 4F 95 91 35 C0 0A 36 
# testCommand 84 82 00 00 10 4C 7E AA 9B D8 98 09 B3 C3 4F 95 91 35 C0 0A 36 
# Filecommand 84 82 00 00 10 4C 7E AA 9B D8 98 09 B3 C3 4F 95 91 35 C0 0A 36 
# Response APDU (35): 90 00 
# EXTERNAL AUTHENTICATE command (-> 84 82 00 00 10 4C 7E AA 9B D8 98 09 B3 C3 4F 95 91 35 C0 0A 36 ) (<- 90 00 )
84 82 00 00 10 4C 7E AA 9B D8 98 09 B3 C3 4F 95 91 35 C0 0A 36
90 00
# => External Authenticate end
# => Delete On Card Object begin
# + AID to delete is A0 00 00 00 62 03 01 0C 01 01 
# + Cascade mode ? false
# + Security mode is NO_SECURITY_LEVEL
# * Delete Command is 80 E4 00 00 0C 4F 0A A0 00 00 00 62 03 01 0C 01 01 
# Command APDU (36): 80 E4 00 00 0C 4F 0A A0 00 00 00 62 03 01 0C 01 01 
# testCommand 80 E4 00 00 0C 4F 0A A0 00 00 00 62 03 01 0C 01 01 
# Filecommand 80 E4 00 00 0C 4F 0A A0 00 00 00 62 03 01 0C 01 01 
# Response APDU (36): 00 90 00 
# DELETE OBJECT command (-> 80 E4 00 00 0C 4F 0A A0 00 00 00 62 03 01 0C 01 01 ) (<- 00 90 00 )
80 E4 00 00 0C 4F 0A A0 00 00 00 62 03 01 0C 01 01
00 90 00
# => Delete On Card Object End
# => Delete On Card Object begin
# + AID to delete is A0 00 00 00 62 03 01 0C 01 
# + Cascade mode ? false
# + Security mode is NO_SECURITY_LEVEL
# * Delete Command is 80 E4 00 00 0B 4F 09 A0 00 00 00 62 03 01 0C 01 
# Command APDU (37): 80 E4 00 00 0B 4F 09 A0 00 00 00 62 03 01 0C 01 
# testCommand 80 E4 00 00 0B 4F 09 A0 00 00 00 62 03 01 0C 01 
# Filecommand 80 E4 00 00 0B 4F 09 A0 00 00 00 62 03 01 0C 01 
# Response APDU (37): 00 90 00 
# DELETE OBJECT command (-> 80 E4 00 00 0B 4F 09 A0 00 00 00 62 03 01 0C 01 ) (<- 00 90 00 )
80 E4 00 00 0B 4F 09 A0 00 00 00 62 03 01 0C 01
00 90 00
# => Delete On Card Object End
